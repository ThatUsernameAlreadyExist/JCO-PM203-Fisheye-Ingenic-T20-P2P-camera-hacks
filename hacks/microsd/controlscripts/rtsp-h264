#!/bin/sh
SERVICE_NAME="RTSP H264 Server"
PIDFILE="/var/run/v4l2rtspserver-master-h264.pid"
WATCHDOG_PIDFILE="/var/run/v4l2rtspserver-master-h264-watch.pid"
LOGDIR="/opt/media/sdc/log"
LOGPATH="$LOGDIR/v4l2rtspserver-master.log"
export LD_LIBRARY_PATH='/opt/media/sdc/lib/:/thirdlib:/system/lib/:/ipc/lib/'

. /opt/media/sdc/scripts/common_functions.sh
. /opt/media/sdc/scripts/update_timezone.sh

if [ ! -f /opt/media/sdc/config/rtspserver.conf ]; then
  cp /opt/media/sdc/config/rtspserver.conf.dist /opt/media/sdc/config/rtspserver.conf
fi

if [ -f /opt/media/sdc/config/rtspserver.conf ]; then
  . /opt/media/sdc/config/rtspserver.conf
fi

if [ -f /opt/media/sdc/config/osd.conf ]; then
  . /opt/media/sdc/config/osd.conf 2>/dev/null
fi


status()
{
  pid="$(cat "$PIDFILE" 2>/dev/null)"
  if [ "$pid" ]; then
    # Prints PID: $pid if exists and returns 0(no error) else returns 1(error condition)
    kill -0 "$pid" >/dev/null && echo "PID: $pid" || return 1
  fi
}

start()
{
  if [ "$(status)" != "" ]; then
    echo "A v4l2rtspserver is already running, please stop it or reboot"
  else
    echo "Starting v4l2rtspserver-master"
    /opt/media/sdc/controlscripts/rtsp-mjpeg stop

    ## Configure OSD
    if [ -f /opt/media/sdc/controlscripts/configureOsd ]; then
      . /opt/media/sdc/controlscripts/configureOsd  2>/dev/null
    fi

    ## Configure Motion
    if [ -f /opt/media/sdc/controlscripts/configureMotion ]; then
      . /opt/media/sdc/controlscripts/configureMotion  2>/dev/null
    fi
    ## Bitrate
    /opt/media/sdc/bin/setconf -k b -v ${BITRATE} 2>/dev/null

    ## Framerate
    if [ "$FRAMERATE_DEN" != "" ] && [ "$FRAMERATE_NUM" != "" ]; then
        /opt/media/sdc/bin/setconf -k d -v "$FRAMERATE_NUM,$FRAMERATE_DEN" 2>/dev/null
    fi

    ## Audio
    if [ "$AUDIOFORMAT" != "OFF" ] ; then
        AUDIOPARAM="-E $AUDIOFORMAT:$AUDIOINBR:$AUDIOOUTBR"
        /opt/media/sdc/bin/setconf -k h -v "$HWVOLUME" 2>/dev/null
        /opt/media/sdc/bin/setconf -k i -v "$SWVOLUME" 2>/dev/null
        /opt/media/sdc/bin/setconf -k q -v "$FILTER" 2>/dev/null
        /opt/media/sdc/bin/setconf -k l -v "$HIGHPASSFILTER" 2>/dev/null
        /opt/media/sdc/bin/setconf -k a -v "$AECFILTER" 2>/dev/null
    else
        AUDIOPARAM="-A"
    fi

    ## Video format
    if [ "$VIDEOFORMAT" != "" ]; then
	    VIDEOFORMAT="-r $VIDEOFORMAT"
    fi

    ## UserName and password
    if [ "$USERNAME" != "" ]; then
        CREDENTIAL="-U $USERNAME:$USERPASSWORD"
    fi

    ## Port
    if [ "$PORT" != "" ]; then
        PORT="-P $PORT"
    fi

    ## FLIP
    if [ "$FLIP" == "ON" ]; then
        /opt/media/sdc/bin/setconf -k f -v 1
    elif [ "$FLIP" == "OFF" ]; then
        /opt/media/sdc/bin/setconf -k f -v 0
    fi
    
    if [ $RTSPLOGENABLED -eq 0 ]; then
        LOGPATH="/dev/null"
    fi

    restart_service_if_need /opt/media/sdc/controlscripts/onvif

    echo "================== START ===============" >> "$LOGPATH"
    echo "/opt/media/sdc/bin/v4l2rtspserver-master $RTSPH264OPTS $AUDIOPARAM $VIDEOFORMAT $CREDENTIAL $PORT" >> "$LOGPATH"
    /opt/media/sdc/bin/v4l2rtspserver-master $RTSPH264OPTS $AUDIOPARAM $VIDEOFORMAT $CREDENTIAL $PORT 2>> "$LOGPATH" >> "$LOGPATH" &
    echo "$!" > "$PIDFILE"

    ## Watchdog
    if ! checkpid "$WATCHDOG_PIDFILE"; then
      /opt/media/sdc/scripts/service-watchdog.sh /opt/media/sdc/controlscripts/rtsp-h264 1 &
      echo "$!" > "$WATCHDOG_PIDFILE"
    fi
  fi
}

stop()
{
  killpid "$WATCHDOG_PIDFILE"
  killpid "$PIDFILE"
}

if [ $# -eq 0 ]; then
  start
else
  case $1 in start|stop|status)
    $1
    ;;
  esac
fi
